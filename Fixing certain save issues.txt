+Loading 'Corrupt' Saves
	Requires: GameShark
  It is possible to force the game to load a save it believes to be corrupt.  This may occur because a data was changed in a hex editor without correcting the checksum values, or due to you forcefully uploading a 'save file' as described below.
  You can use this code:
  8008F443 0000
  - or enter 'memory editor' and set byte 8008F443 from 1 to 0.
  Note that this does not repair a damaged file; it skips setting the flag that denotes a corrupt save, replacing it with the damaged clock test.

+Downloading a FlashRam Save at Runtime
	Requires: GameShark + PC uplink, hex editor (optional)
  Unless you have a Jet Force Gemini cartridge, there is poor V64 Jr. FlashRam upload or download support.  My own attempts to upload a FlashRam file results in it grabbing every other word.  Thankfully, though, it can be retrieved from rdram at runtime using a gameshark.
  Any time after the title screen the save file should be present in memory.  Upload 0x10000 bytes of data, starting at 80126EA0 and ending at 80136EA0.  Optionally, using a hex editor, copy that 0x10000 of data and paste it to the end of the file.  Normally, this duplicate file is used as a rollback in the case of errors.

+Uploading a FlashRam Save at Runtime
	Requires: GameShark + PC uplink, previously-saved FlashRam file
  You can upload the contents of a FlashRam save to the cart at runtime.  However, the data will absolutely throw the 'corrupted save' flag, so you must used this in conjunction with the 'loading corrupt saves' fix above.
  Upload 0x10000 bytes of data to address 80126EA0.
  You can probably get away with loading this on the title screen, but the best time to do so is during the menus, before you select a character.  Doing so during play is hazardous, since the save file contains data used at runtime.

